/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Essentials.Product;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EmergencyRequest;
import java.awt.CardLayout;
import java.util.Map;
import javax.swing.JPanel;
  import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JEditorPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.text.Document;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;
import org.jfree.util.StringUtils;
/**
 *
 * @author sayu
 */
public class EmergencyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EmergencyJPanel
     */
  
JPanel userProcessContainer;
    EcoSystem ecosystem;
     UserAccount account;
     Patient patient;
    String location;
    
 public   EmergencyJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.ecosystem=ecosystem;
        this.account = account;
        patient = null;
        location = "";
        //this.patient=patient;
        initializePage();
    }
 private void initializePage() {
     for(Patient p:ecosystem.getPatientDirectory().getpatientlist()){
         if(p.getUserName().equals(account.getUsername())){
             patient = p;
         }
     }
    }
 private static void sendFromGMail(String from, String pass, String[] to, String subject, String body) {
        Properties props = System.getProperties();
        String host = "smtp.gmail.com";
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.user", from);
        props.put("mail.smtp.password", pass);
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.auth", "true");

        Session session = Session.getDefaultInstance(props);
        MimeMessage message = new MimeMessage(session);

        try {
            message.setFrom(new InternetAddress(from));
            InternetAddress[] toAddress = new InternetAddress[to.length];

            // To get the array of addresses
            for( int i = 0; i < to.length; i++ ) {
                toAddress[i] = new InternetAddress(to[i]);
            }

            for( int i = 0; i < toAddress.length; i++) {
                message.addRecipient(Message.RecipientType.TO, toAddress[i]);
            }

            message.setSubject(subject);
            message.setText(body);
            Transport transport = session.getTransport("smtp");
            transport.connect(host, from, pass);
            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
        }
        catch (AddressException ae) {
            ae.printStackTrace();
        }
        catch (MessagingException me) {
            me.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMsg = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnShare = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setText("Message:");

        txtMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMsgActionPerformed(evt);
            }
        });

        btnSend.setBackground(new java.awt.Color(0, 0, 0));
        btnSend.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnSend.setForeground(new java.awt.Color(255, 255, 255));
        btnSend.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hospital_50px.png"))); // NOI18N
        btnSend.setText("Send Notification to Primary Hospital");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel4.setText("(Please write about the emergency)");

        btnShare.setBackground(new java.awt.Color(0, 0, 0));
        btnShare.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnShare.setForeground(new java.awt.Color(255, 255, 255));
        btnShare.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/maps_50px.png"))); // NOI18N
        btnShare.setText("Share patients address");
        btnShare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShareActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("EMERGENCY REQUEST");

        btnSubmit.setBackground(new java.awt.Color(50, 9, 27));
        btnSubmit.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/ambulance_50px.png"))); // NOI18N
        btnSubmit.setText("SUBMIT REQUEST!");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnShare, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(183, 183, 183))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(282, 282, 282))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(64, 64, 64)
                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShare, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnBack1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/back_to_50px.png"))); // NOI18N
        btnBack1.setBorder(null);
        btnBack1.setBorderPainted(false);
        btnBack1.setContentAreaFilled(false);
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(50, 9, 27));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
         String address1=patient.getAddress1();
        String address2=patient.getAddress2();
        String address3=patient.getAddress3();
        String combined = address1+" "+address2+" "+address3;
        String[] split=combined.split(" ");
        String name = "";
        String names="";
        String nameFinal = "";
        int numberOfItems = split.length;
        System.out.println(combined);
        for (int i=numberOfItems-1; i>=0; i--)
        {
            if(i>0){

                String first =  split[i] ;
                name =  first + "+"+ name ;

            }
            else{
                String first =  split[i] ;
                names = first+"+"+name;
            }
        }
        names = names.substring(0, names.length()-1);

        location = names;
        
        
        UserAccount ambAccount = null;
        if(txtMsg.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Detailed Message is mandatory!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }
        
        EmergencyRequest request = new EmergencyRequest();
        request.setEnterprise(patient.getPrimaryHospital());
        request.setHospital(patient.getPrimaryHospital());
        request.setMsg(txtMsg.getText());
        request.setLocation(location);
        request.setSender(account);
        Map<String,Date> reqMap = request.getStatusMap();
        reqMap.put("Emergency Request created!", new Date());
        request.setStatusMap(reqMap);
        request.setEnterprise(patient.getPrimaryHospital());
        ecosystem.getEmergencyQueue().addEmergencyRequest(request);
        List<UserAccount> ambList = new ArrayList<UserAccount>();
        for (Network network : ecosystem.getNetworkList()){
            for (Enterprise enterpriseCheck : network.getEnterpriseDirectory().getEnterpriseList()){
                if(enterpriseCheck.getName().equals(patient.getPrimaryHospital())){
                    for(Organization org : enterpriseCheck.getOrganizationDirectory().getOrganizationList()){
                    for (UserAccount ua : org.getUserAccountDirectory().getUserAccountList()) {
                        if(ua.getRole().toString().equals("AmbulanceDriver")){
                          //  ua.getEmergencyQueue().addEmergencyRequest(request);
                            ambList.add(ua);
                        }
                    }
                    }
                }
            }
        }
        int cases = 0;
        for(UserAccount u : ambList){
            if(cases == 0){
                cases = u.getEmergencyQueue().getEmergencyRequestList().size();
                ambAccount  = u;
            }else{
                if(cases > u.getEmergencyQueue().getEmergencyRequestList().size()){
                    ambAccount  = u;
                    cases = u.getEmergencyQueue().getEmergencyRequestList().size();
            }                
            }

        }
        
        ambAccount.getEmergencyQueue().addEmergencyRequest(request);
        reqMap.put("Request sent to ambulance-!"+ambAccount, new Date());
                List<Product> productList = ecosystem.getProductCatalog().getProductcatalog(); 
        String room = "";  
        int ICURoom = 0;
        int deluxRoom = 0;
        int generalRoom = 0;
        for(Product p: productList){
            if(p.getProdName().equalsIgnoreCase("ICU")){
                generalRoom = p.getAvail();
                int roomQuant = p.getAvail();
                if(roomQuant > 0){
                    room = p.getProdName();
                    int newQuant = (roomQuant-1);
                    if(newQuant < 0){
                        p.setAvail(0);
                    }else{
                        p.setAvail(newQuant);
                    }
                }
            }
        }
        if(room.equals("")){
          for(Product p: productList){
            if(p.getProdName().equalsIgnoreCase("delux Room")|| p.getProdName().equalsIgnoreCase("dr") ){
                generalRoom = p.getAvail();
                int roomQuant = p.getAvail();
                if(roomQuant > 0){
                    room = p.getProdName();
                    int newQuant = (roomQuant-1);
                    if(newQuant < 0){
                        p.setAvail(0);
                    }else{
                        p.setAvail(newQuant);
                    }
                }
            }
        }
        }
        
        if(room.equals("")){
                 for(Product p: productList){
            if(p.getProdName().equalsIgnoreCase("General Room")|| p.getProdName().equalsIgnoreCase("gr") ){
                generalRoom = p.getAvail();
                int roomQuant = p.getAvail();
                if(roomQuant > 0){
                    room = p.getProdName();
                    int newQuant = (roomQuant-1);
                    if(newQuant < 0){
                        p.setAvail(0);
                    }else{
                        p.setAvail(newQuant);
                    }
                }
            }
        }   
            
        }



        ecosystem.getEmergencyQueue().updateEmergencyRequest(request, ecosystem.getEmergencyQueue().getEmergencyRequestList());
     JOptionPane.showMessageDialog(null,"Request submitted!\nHospital -"+patient.getPrimaryHospital()+" has been notified, "+room+" has been booked and Ambulance -"+ambAccount+" is on the way!", "Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnShareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShareActionPerformed
        //       Required Format -  String address = "360+West+Boylston+Street,+Boylston,+MA+01583";
        String address1=patient.getAddress1();
        String address2=patient.getAddress2();
        String address3=patient.getAddress3();
        String combined = address1+" "+address2+" "+address3;
        String[] split=combined.split(" ");
        String name = "";
        String names="";
        String nameFinal = "";
        int numberOfItems = split.length;
        System.out.println(combined);
        for (int i=numberOfItems-1; i>=0; i--)
        {
            if(i>0){

                String first =  split[i] ;
                name =  first + "+"+ name ;

            }
            else{
                String first =  split[i] ;
                names = first+"+"+name;
            }
        }
        names = names.substring(0, names.length()-1);

        location = names;
      
        String url = "https://www.google.com/maps/place/"+location;
        try {
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
        } catch (IOException ex) {
            Logger.getLogger(EmergencyJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnShareActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        if(txtMsg.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Message is mandatory!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;

        }
        int room = 0;
        String msg = "Notified Primary hospital -"+patient.getPrimaryHospital();
                       sendFromGMail("medtech2254", "AedGroup@9", new String[]{"anjalisajeev@gmail.com"},"HIGH-PRIORITY!!! -Emergency Request Raised!","Emergency Request has been raised to your hospital! Patient has been allocated room and hospital Notified. Immediate Action Required.");
                JOptionPane.showMessageDialog(null,msg, "Confirmation", JOptionPane.INFORMATION_MESSAGE);
             
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMsgActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnShare;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtMsg;
    // End of variables declaration//GEN-END:variables

    
}
